AWSTemplateFormatVersion: "2010-09-09"
Resources:
  # SNS Topic
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: sns-sqs-topic

  # SQS Queue
  SQSQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: sns-sqs-queue

  # SQS Queue Policy to allow SNS to send messages to SQS
  SQSQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref SQSQueue
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: "sqs:SendMessage"
            Resource: !GetAtt SQSQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref SNSTopic

  # SNS to SQS Subscription
  SNSSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      TopicArn: !Ref SNSTopic
      Endpoint: !GetAtt SQSQueue.Arn

  # Lambda Function Role
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties: 
      RoleName: sns-sqs-lambda-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: sns-sqs-lambda-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action: 
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                Resource: !GetAtt SQSQueue.Arn

  # Lambda Function
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: sns-sqs-lambda-consumer
      Handler: index.lambda_handler
      Runtime: python3.9
      Role: !GetAtt LambdaExecutionRole.Arn
      Timeout: 30
      Code:
        ZipFile: |
          import json
          import logging
          logger = logging.getLogger()
          logger.setLevel("INFO")

          def lambda_handler(event, context):
              logger.info('running')
              logger.info(f"EVENT: {event}")
              logger.info(f"CONTEXT: {context}")

  # Lambda Trigger for SQS
  LambdaSQSTrigger:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 5
      EventSourceArn: !GetAtt SQSQueue.Arn
      FunctionName: !GetAtt LambdaFunction.Arn
      Enabled: True

Outputs:
  SNSTopicArn:
    Description: The ARN of the SNS topic
    Value: !Ref SNSTopic

  SQSQueueArn:
    Description: The ARN of the SQS queue
    Value: !GetAtt SQSQueue.Arn

  LambdaFunctionName:
    Description: The name of the Lambda function
    Value: !Ref LambdaFunction
